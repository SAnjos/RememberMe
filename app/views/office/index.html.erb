<% content_for :head do%>

  <%= stylesheet_link_tag 'droppedItems/note.css' %>
  <%= stylesheet_link_tag 'index.css' %>
  <%= stylesheet_link_tag 'contextMenu/jquery.contextmenu.css' %>
  <%= stylesheet_link_tag '3rd party/datatables.css' %>
  <%= stylesheet_link_tag 'piro/style/style', :media => 'screen', :title => 'black'%>
  
  
  <%#= javascript_include_tag "3rd party/jquery/ui/", :all, :recursive => true %>
  <% #drag %>
  <%= javascript_include_tag "3rd party/jquery/jquery-ui-1.8.6.custom.min.js"%>
  <%#= javascript_include_tag "3rd party/jquery/jqDnR/jqDnR.js" %>

  <%= javascript_include_tag "3rd party/Base.js" %>
  <%= javascript_include_tag "3rd party/hash.js" %>
  <%= javascript_include_tag "3rd party/jquery/jquery.contextmenu-r2.js" %>
  <%= javascript_include_tag '3rd party/jquery/piro/pirobox.js'%>
  <%= javascript_include_tag '3rd party/jquery/jquery.dataTables.min.js'%>

  <%= javascript_include_tag "ofdApplication.js" %>
  <%= javascript_include_tag "ofdSystem.js" %>
  <%= javascript_include_tag "office/index.js" %>
  <%= javascript_include_tag "DroppedItems/ofdCustomItem.js" %>
  <%= javascript_include_tag "DroppedItems/ofdNote.js" %>

<% end %>


<div id="odTableTop">
  <div id="header">
    <p class="item">
      <img src="images/index/logo.png" alt="OfficeDesk" class="logo"/>
    </p>
    <p class="item menu"><a href="usuarios/logout" id="signOut">Sign out</a></p>
    <p class="item menu"><a href="#" class="pirobox">Trash</a></p>
  </div>
  
  <div id="right_menu">
    <a id="note" class="menuItem" href="#"></a>
    <!--a id="cal" class="menuItem" href="#"></a>
    <a id="address" class="menuItem" href="#"></a>
    <a id="text" class="menuItem" href="#"></a>
    <a id="trash" class="menuItem" href="#"></a-->
  </div>

  <div class="contextMenu" id="divContextMenu">
    <ul>
      <li id="novaNota">New note</li>
    </ul>

  </div>

</div>



<script type="text/javascript">

     function preparaPirobox(){

     function onShow(){
             $.ajax({
                      type: 'GET',
                      url: 'note/view_trash',
                      async: true,
                      success: function(data){

                        $('#trashListTable').html(data);
                        drawTrashListTable();

                      },
                      error: function(XMLHttpRequest, textStatus, errorThrow){
                            raiseException('Sorry, but occurred an error while opening the trash: ' + errorThrow);

                      }
                    });


     }


     try{
       var viewTrash = '<%= (render "note/viewTrash").gsub("\n", "") %>';
       setPirobox(viewTrash, onShow);
     }catch(e){
       raiseException(e);
     }
   }

   function preparaSignOut(){
     $("#signOut").click(function() {
        saveChangedItensList();
     });
   }

   function showNotes(){

      window.setTimeout(function(){
         <% if @note.empty? %>
               NewNote(undefined,
                      undefined,
                      'Welcome to OffDesk. \n \n Drag and Drop this note, create more notes from the right menu. Click on the x to trash this.',
                      undefined,
                      undefined,
                      undefined,
                      undefined
                    );
         <% else %>
           <% @note.each do |n| %>
             <%= "NewNote( #{n.posX}, #{n.posY}, \"#{Note.trata_conteudo n.conteudo}\", #{n.width}, #{n.height}, false, true, \"#{n.UUID}\", \"#{n.updated_at.strftime("%m/%d/%Y")}\" );"%>
           <% end %>
         <% end %>
      },100);

   }

   function removeNote(id){

     $.ajax({
              type: 'POST',
              async: true,
              data: ({
                 'note':{
                          'id': id
                        }
                      }),

              url: '<%= url_for( :controller => :note, :action => :remove )%>',

              success: function(data){
                         if (data === 'Ok'){
                            $('#tr_' + id).fadeOut("fast",function(){
                              $('#trashListTable').dataTable().fnDestroy();
                              $(this).remove();
                              drawTrashListTable();
                            });


                         }
              },

              error: function(XMLHttpRequest, textStatus, errorThrow){
                    raiseException('Oops, an error occurred while we were removing your note: ' + errorThrow);
              }

     });
   }

   function recycleNote(id){
     $.ajax({
              type: 'POST',
              async: true,
              data: ({
                 'note':{
                          'id': id
                        }
                      }),

              url: '<%= url_for( :controller => :note, :action => :recycle )%>',

              success: function(data){

                         $('#tr_' + id).fadeOut("fast",function(){
                            var func = '';
                            func = 'try{';
                            func += data;
                            func += '}catch(e){';
                            func += '  raiseException(e);';
                            func += '}';
                            eval(func);

                            $('#trashListTable').dataTable().fnDestroy();
                            $(this).remove();
                            drawTrashListTable();

                         });

              },

              error: function(XMLHttpRequest, textStatus, errorThrow){
                    raiseException('Just happened an error while we were recycling your note: ' + errorThrow);
              }

     });
   }

   function drawTrashListTable(){
        $('#trashListTable').dataTable({
            "bPaginate": true,
            "sPaginationType": "full_numbers",
            "bLengthChange": false,
            "bFilter": false,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false,
            "iDisplayLength": 15,
            "oLanguage": {
                    "sLengthMenu": "Display _MENU_ records per page",
                    "sZeroRecords": "Trash is empty",
                    "sInfo": "Showing _START_ to _END_ of _TOTAL_notes",
                    "sInfoEmpty": "showing 0 to 0 of 0 notes",
                    "sInfoFiltered": "(filtered from _MAX_ total records)"
            }
        });
   }

</script>

<script type="text/javascript">

   $().ready(function(){

     initialization();
     SetupRightMenu();
     preparaPirobox();
     preparaSignOut();
     showNotes();

   });

   var _gaq = _gaq || [];
   _gaq.push(['_setAccount', 'UA-21985942-1']);
   _gaq.push(['_trackPageview']);

   (function() {
       var ga = document.createElement('script');
       ga.type = 'text/javascript';
       ga.async = true;
       ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
       var s = document.getElementsByTagName('script')[0];
       s.parentNode.insertBefore(ga, s);
   })();



</script>